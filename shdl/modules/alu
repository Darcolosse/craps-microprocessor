module _ual(a[31..0], b[31..0], cmd[5..0] : s[31..0], enN, enZ, enVC, dN, dZ, dV, dC)
    // Command decoding
    decoder6to64(cmd[5..0], c[63..0])
   
    // ADDER / SUBSTRACTER with carry
    // add / addcc / sub / subcc
    addsub32(a[31..0], b[31..0], cmd[2], d[31..0], dV, dC)
    s[31..0] = d[31..0] output enabled when c[0] + c[4] + c[16] + c[20]

    // and / andcc 
    s[31..0] = a[31..0] * b[31..0] output enabled when c[1] + c[17]

    // or / orcc
    s[31..0] = a[31..0] + b[31..0] output enabled when c[2] + c[18]

    // xor / xorcc
    s[31..0] = a[31..0] * /b[31..0] + /a[31..0] * b[31..0] output enabled when c[3] + c[19]

    // sethi
    s[31..8] = a[23..0] output enabled when c[35]
    s[7..0] = "00000000" output enabled when c[35]
    s[31..0] = a[23..0] & "00000000" output enabled when c[35]

    // barrel shifter
    dg = c[12] + c[13]
    barrelshifter32(a[31..0], b[4..0], dg, e[31..0])
    s[31..0] = e[31..0] output enabled when c[13] + c[14]

    // SIGNEXT13, extension A bus, 13 bits to 32 bits
    s[31..0] = a[12] * "1111111111111111111" & a[12..0] output enabled when c[32]

    // SIGNEXT25, extension A bus, 25 bits to 32 bits
    s[31..0] = a[24] * "1111111" & a[24..0] output enabled when c[33]

    // NOPB, no operation, get B bus
    s[31..0] = b[31..0] output enabled when c[40]


    ///////////
    // flags //
    ///////////

    //enVC = c[16] + c[20]
    enVC = cmd[4] * /cmd[1] * /cmd[0]

    //enN = c[16] + c[17] + c[18] + c[19] + c[20]
    enN = cmd[4] * /cmd[3]

    //enZ = c[16] + c[17] + c[18] + c[19] + c[20]
    enZ = cmd[4]

    dZ = /s[31] * /s[30] * /s[29] * /s[28] * /s[27] * /s[26] * /s[25] * /s[24] * /s[23] * /s[22] * /s[21] * /s[20] * /s[19] * /s[18] * /s[17] * /s[16] * /s[15] * /s[14] * /s[13] * /s[12] * /s[11] * /s[10] * /s[9] * /s[8] * /s[7] * /s[6] * /s[5] * /s[4] * /s[3] * /s[2] * /s[1] * /s[0]

    dN = s[31]
end module